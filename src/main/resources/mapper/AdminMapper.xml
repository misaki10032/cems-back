<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cems.mapper.AdminMapper">
    <!--管理员申诉账号密码判断-->
    <select id="gljudgeAP" parameterType="map" resultType="SysAdmin">
        select id, admin_num, admin_pwd, admin_status
        from sys_admin
        where admin_num = #{phone}
          and admin_pwd = #{psw};
    </select>
    <!--管理员申诉-->
    <insert id="insApple" parameterType="map">
        insert into sys_admin_shensu
            (admin_num, content)
        values (#{phone}, #{desc})
    </insert>
    <!--管理员注册-->
    <insert id="registerSys" parameterType="map">
        insert into sys_admin (admin_num, admin_pwd)
        values (#{acc}, #{psw});
    </insert>
    <!--根据账号查询管理员-->
    <select id="selOneSysZC" parameterType="string" resultType="SysAdmin">
        SELECT id, admin_num, admin_pwd, admin_level, admin_status
        from sys_admin
        where admin_num = #{acc}
    </select>
    <!--添加邮箱-->
    <insert id="insertEmail" parameterType="map">
        insert into sys_admin_info (admin_id, admin_phone, admin_emil)
        values (#{id}, #{phoneTwo}, #{email});
    </insert>
    <!--管理员注册差重复-->
    <select id="selOneSysByAcc" parameterType="string" resultType="SysAdmin">
        select admin_num
        from sys_admin
        where admin_num = #{acc}
    </select>
    <!--管理员注册差重复(手机号,邮箱)-->
    <select id="selOneSysByEP" parameterType="map" resultType="SysAdminInfo">
        select admin_phone, admin_emil
        from sys_admin_info
        where admin_phone = #{phoneTwo}
    </select>
    <!--管理员注册差重复(手机号,邮箱)-->
    <select id="selOneSysByEP2" parameterType="map" resultType="SysAdminInfo">
        select admin_phone, admin_emil
        from sys_admin_info
        where admin_emil = #{email}
    </select>
    <!--管理员申诉查询-->
    <select id="selAllAppeal" resultType="SysShenSu">
        select id, admin_num, content
        from sys_admin_shensu
    </select>
    <!--管理员申诉成功-->
    <update id="shensuOK" parameterType="string">
        update sys_admin
        set admin_status='正常'
        where admin_num = #{adminNum}
    </update>
    <!--管理员申诉成功,删除申诉-->
    <delete id="delSS" parameterType="int">
        delete
        from sys_admin_shensu
        where id = #{id}
    </delete>
    <insert id="addLevelUp">
        insert into sys_upgrade(admin_id, admin_target, admin_now, admin_reason)
            value (#{id}, #{target}, #{adminNow}, #{desc});
    </insert>
    <select id="getAllAdminInfo" resultType="SysAdminInfoBig">
        select admin_num         as adminNum
             , admin_pwd         as adminPwd
             , admin_level       as adminLevel
             , admin_id          as adminId
             , admin_phone       as adminPhone
             , admin_house       as adminHouse
             , admin_birth       as adminBirth
             , admin_emil        as adminEmil
             , admin_pwd_protect as adminPwdProtect
             , admin_status      as adminStatus
        from sys_admin as admin
                 inner join sys_admin_info sai on admin.id = sai.admin_id
    </select>
    <update id="killAdmin">
        update sys_admin
        set admin_status = #{status}
        where id = #{id}
    </update>
    <!--管理员升级申请管理-->
    <select id="selAllUp" resultType="SysUpgrade">
        select id, admin_id, admin_target, admin_now, status, admin_reason
        from sys_upgrade
    </select>
    <!--通过id获取升级申请数据-->
    <select id="getAdminUp" resultType="SysUpgrade" parameterType="int">
        select id, admin_id, admin_target, admin_now, status, admin_reason
        from sys_upgrade
        where id = #{id}
    </select>
    <!--管理员升级修改-->
    <update id="upAdminOk" parameterType="map">
        update sys_admin
        set admin_level = #{adminlevel}
        where id = #{id}
    </update>
    <!--管理员升级修改管理员表状态-->
    <update id="changeUpStatus" parameterType="map">
        update sys_upgrade
        set status = #{status}
        where admin_id = #{id}
          and admin_target = #{level}
          and admin_now = #{jiu}
    </update>
    <update id="changePwd">
        update sys_admin
        set admin_pwd = #{pwd}
        where id = #{id}
    </update>


    <select id="getAdminInfo" parameterType="string" resultType="SysAdminInfo">

        SELECT sa.id           adminId,
               sa.admin_num    adminNum,
               sa.admin_pwd    adminPwd,
               sai.admin_phone adminPhone,
               sai.admin_emil  adminEmail,
               sai.admin_house adminHouse,
               sai.admin_birth adminBirth
        FROM sys_admin sa
                 LEFT JOIN sys_admin_info sai
                           ON sa.id = sai.admin_id
        WHERE sa.admin_num = #{adminNum};

    </select>

    <!--更新管理员数据-->
    <update id="updateAdminInfo">
        UPDATE
        sys_admin_info
        <set>
            admin_phone = #{adminPhone},
            admin_house = #{adminHouse},
            admin_birth = #{adminBirth}
        </set>
        WHERE admin_id = #{adminId} ;
    </update>

</mapper>